{"version":3,"sources":["components/Navbar/icons/avatar.png","components/Navbar/icons/profile.svg","components/Navbar/icons/friends.svg","components/Navbar/icons/messages.svg","components/Navbar/icons/news.svg","components/Navbar/icons/music.svg","components/Navbar/icons/settings.svg","components/Navbar/NavbarContainer.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","redux/reducers/auth-reducers.ts","components/Header/HeaderContainer.tsx","redux/reducers/app-reducers.ts","redux/reducers/dialogs-reducers.ts","components/Dialogs/DialogItem/avatar.png","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Login/LoginFormik.tsx","App.tsx","redux/reducers/sidebar-reducers.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","api/api.ts","components/Login/LoginFormik.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/common/Preloader/Preolader.tsx","redux/reducers/profile-reducers.ts","hoc/withAuthRedirect.tsx","utils/helpers/object-helper.ts","redux/reducers/users-reducers.ts","components/Dialogs/Message/Message.module.css"],"names":["NavbarContainer","connect","state","sidebar","props","friendElements","friend","map","f","className","style","src","avatar","alt","name","id","navbar","navbarElements","items","activeClassName","activeLink","to","profile","friends","messages","news","music","settings","titleFriends","Header","AppBar","position","header","Typography","variant","component","title","search","Search","searchIcon","InputBase","placeholder","isAuth","loginBlock","login","Button","btn","onClick","logoutTC","marginRight","initState","email","captchaURL","setAuthUserDataAC","userId","type","data","getCaptchaAC","getAuthUserDataTC","dispatch","a","authAPI","getMe","promise","resultCode","getCaptchaUrlTC","securityAPI","getCaptcha","url","HeaderContainer","this","React","Component","auth","logout","initialized","ADD_MESSAGE","initialState","dialogs","message","newMessageText","addMessageAC","Message","TextField","value","DialogItem","dialogsElements","dialogsItem","d","messagesElements","m","dialog","friendItem","Friend","dialogURL","nav","DialogsContainer","compose","messagePage","onAddMessage","withAuthRedirect","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","styles","dialogsBlock","handleSubmit","messageForm","textForm","inputField","label","onChange","handleChange","Login","useSelector","password","rememberMe","validate","errors","test","captcha","length","formBlock","itemForm","htmlFor","checkbox","checked","ProfileContainer","lazy","UsersContainer","App","initializedAppTC","fallback","path","render","exact","withRouter","app","Promise","all","reducer","combineReducers","profilePage","profileReducer","action","usersPage","usersReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","module","exports","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","isUnfollow","delete","isFollow","post","profileAPI","getUserByID","getStatus","updateStatus","status","put","Preloader","color","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","posts","likeCounts","console","log","newPost","newPostText","filter","p","postId","addPostAC","setUserStatusAC","deletePost","getUsersProfile","getUserStatus","userUpdateStatus","mapStateToPropsForRedirect","restProps","updateObjectInArray","itemID","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SETUSERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","userID","followed","count","follow","unfollow","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","requestUsers","page","totalCount","followMode","unfollowMode"],"mappings":"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","file":"static/js/main.3398c80c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.7bdf7b93.png\";","export default __webpack_public_path__ + \"static/media/profile.a296afc6.svg\";","export default __webpack_public_path__ + \"static/media/friends.cc1aa831.svg\";","export default __webpack_public_path__ + \"static/media/messages.7be6e02d.svg\";","export default __webpack_public_path__ + \"static/media/news.12440c92.svg\";","export default __webpack_public_path__ + \"static/media/music.af606310.svg\";","export default __webpack_public_path__ + \"static/media/settings.f00ed622.svg\";","import {connect} from \"react-redux\";\r\nimport {Navbar} from \"./Navbar\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport {initStateSidebarType} from \"../../redux/reducers/sidebar-reducers\";\r\n\r\ntype mapStateToPropsType = {\r\n    sidebar: initStateSidebarType\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps) (Navbar);","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Navbar.module.css'\r\nimport avatar from './icons/avatar.png'\r\nimport profile from './icons/profile.svg'\r\nimport friends from './icons/friends.svg'\r\nimport messages from './icons/messages.svg'\r\nimport news from './icons/news.svg'\r\nimport music from './icons/music.svg'\r\nimport settings from './icons/settings.svg'\r\nimport {initStateSidebarType} from \"../../redux/reducers/sidebar-reducers\";\r\n\r\ntype PropsType = {\r\n  sidebar: initStateSidebarType\r\n}\r\n\r\nexport const Navbar = (props: PropsType) => {\r\n\r\n  const friendElements = props.sidebar.friend\r\n      .map(f => <div className={style.friend} key={f.id}>\r\n        <img src={avatar} alt=''/>\r\n        {f.name}\r\n      </div>)\r\n\r\n  return (\r\n      <div className={style.navbar}>\r\n        <div className={style.navbarElements}>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/profile'>\r\n              <img src={profile} alt=''/>\r\n              профиль\r\n            </NavLink>\r\n          </div>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/users'>\r\n              <img src={friends} alt=''/>\r\n              друзья\r\n            </NavLink>\r\n          </div>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/dialogs'>\r\n              <img src={messages} alt=''/>\r\n              сообщения\r\n            </NavLink>\r\n          </div>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/news'>\r\n              <img src={news} alt=''/>\r\n              новости\r\n            </NavLink>\r\n          </div>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/music'>\r\n              <img src={music} alt=''/>\r\n              музыка\r\n            </NavLink>\r\n          </div>\r\n          <div className={style.items}>\r\n            <NavLink activeClassName={style.activeLink} to='/settings'>\r\n              <img src={settings} alt=''/>\r\n              настройки\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={style.friends}>\r\n          <div className={style.titleFriends}>Друзья онлайн:</div>\r\n          {friendElements}\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Header.module.css'\r\nimport {HeaderPropsType} from \"../../utils/types/types\";\r\nimport {AppBar, Button, InputBase, Typography} from \"@material-ui/core\";\r\nimport {Search} from \"@material-ui/icons\";\r\n\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n      <AppBar position=\"static\">\r\n        <div className={style.header}>\r\n          <Typography variant=\"h6\" component=\"div\" className={style.title}>\r\n            FRND\r\n          </Typography>\r\n          <div className={style.search}>\r\n            <div>\r\n              <Search className={style.searchIcon}/>\r\n            </div>\r\n            <InputBase placeholder=\"поиск…\"/>\r\n          </div>\r\n          {\r\n            props.isAuth\r\n                ? <div className={style.loginBlock}>\r\n                  {props.login}\r\n                  <Button className={style.btn}\r\n                          variant=\"contained\"\r\n                          onClick={props.logoutTC}>\r\n                    выйти\r\n                  </Button>\r\n                </div>\r\n                : <div style={{marginRight: '25px'}}>вы не авторизованы</div>\r\n          }\r\n        </div>\r\n      </AppBar>\r\n  )\r\n}","import {authAPI, securityAPI} from \"../../api/api\";\r\n\r\ntype actionType = SetUserDataActionType | GetCaptchaActionType\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserDataAC>;\r\nexport type GetCaptchaActionType = ReturnType<typeof getCaptchaAC>;\r\ntype InitStateType = {\r\n  id: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n  captchaURL: string | null\r\n}\r\n\r\nconst initState: InitStateType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaURL: null\r\n}\r\n\r\nexport const authReducer = (\r\n    state: InitStateType = initState,\r\n    action: actionType): InitStateType => {\r\n\r\n  switch (action.type) {\r\n    case 'AUTH/SET-USER-DATA':\r\n      return {\r\n        ...state,\r\n        ...action.data\r\n      }\r\n    case 'AUTH/GET-CAPTCHA-SUCCESS':\r\n      return {\r\n        ...state,\r\n        captchaURL: action.captchaURL\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userId: number | null,\r\n                                  email: string | null,\r\n                                  login: string | null,\r\n                                  isAuth: boolean) =>\r\n    ({\r\n      type: 'AUTH/SET-USER-DATA',\r\n      data: {userId, email, login, isAuth}\r\n    } as const);\r\n\r\nexport const getCaptchaAC = (captchaURL: string | null) => ({\r\n  type: 'AUTH/GET-CAPTCHA-SUCCESS',\r\n  captchaURL\r\n} as const)\r\n\r\n\r\nexport const getAuthUserDataTC = () => async (dispatch: any) => {\r\n  const promise = await authAPI.getMe()\r\n  if (promise.data.resultCode === 0) {\r\n    let {id, email, login} = promise.data.data\r\n    dispatch(setAuthUserDataAC(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const loginTC = (email: string,\r\n                        password: string,\r\n                        rememberMe: boolean,\r\n                        captcha: any) => async (dispatch: any) => {\r\n  const promise = await authAPI.login(email, password, rememberMe, captcha)\r\n  if (promise.data.resultCode === 0) {\r\n    dispatch(getAuthUserDataTC())\r\n  } else {\r\n    if (promise.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrlTC())\r\n    }\r\n    let message = promise.data.messages.length > 0 ? promise.data.messages[0] : 'some error';\r\n  }\r\n}\r\n\r\nexport const logoutTC = () => async (dispatch: any) => {\r\n  const promise = await authAPI.logout()\r\n  if (promise.data.resultCode === 0) {\r\n    dispatch(setAuthUserDataAC(null, null, null, false))\r\n  }\r\n}\r\nexport const getCaptchaUrlTC = () => async (dispatch: any) => {\r\n  const promise = await securityAPI.getCaptcha()\r\n  const captchaURL = promise.data.url\r\n  dispatch(getCaptchaAC(captchaURL))\r\n}\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../../redux/reducers/auth-reducers\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport {\r\n  HeaderContainerType,\r\n  MapStatePropsTypeHeaderContainer\r\n} from \"../../utils/types/types\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n  render() {\r\n    return <Header login={this.props.login}\r\n                   isAuth={this.props.isAuth}\r\n                   logoutTC={this.props.logoutTC}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxStateType): MapStatePropsTypeHeaderContainer => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {logoutTC})(HeaderContainer)\r\n","import {getAuthUserDataTC} from \"./auth-reducers\";\r\n\r\ntype actionType = setInitializedAT\r\ntype InitStateType = {\r\n  initialized: boolean\r\n}\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>\r\n\r\nconst initState: InitStateType = {\r\n  initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitStateType = initState,\r\n                           action: actionType): InitStateType => {\r\n\r\n  switch (action.type) {\r\n    case 'SET_INITIALIZED':\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setInitializedAC = () => ({type: 'SET_INITIALIZED'} as const);\r\n\r\nexport const initializedAppTC = () => async (dispatch: any) => {\r\n  let promise = dispatch(getAuthUserDataTC())\r\n  await Promise.all([promise])\r\n  dispatch(setInitializedAC())\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\ntype AddMessageAT = {\r\n  type: 'ADD-MESSAGE'\r\n  newMessageText: string\r\n}\r\ntype ActionType = AddMessageAT\r\ntype initialStateDialogsReducerType = {\r\n  dialogs: Array<{ id: number; name: string }>\r\n  messages: Array<{ id: number; message: string }>\r\n  newMessageText: string\r\n}\r\n\r\nlet initialState: initialStateDialogsReducerType = {\r\n  dialogs: [\r\n    {id: 1, name: 'Василий'},\r\n    {id: 2, name: 'Петр'},\r\n  ],\r\n\r\n  messages: [\r\n    {id: 1, message: 'Привет, как дела?'},\r\n    {id: 2, message: 'Пошли пройдемся!'},\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: initialStateDialogsReducerType = initialState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        dialogs: [...state.dialogs],\r\n        messages: [...state.messages, {id: 10, message: action.newMessageText}],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addMessageAC = (newMessageText: string): AddMessageAT => ({\r\n  type: ADD_MESSAGE,\r\n  newMessageText\r\n})","export default __webpack_public_path__ + \"static/media/avatar.8f6f0a61.png\";","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype MessagePropsType = {\r\n  message: string\r\n}\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n  return (\r\n      <div className={style.messages}>\r\n        <TextField variant=\"outlined\"\r\n                   value={props.message}\r\n        />\r\n      </div>\r\n  )\r\n}","import React from \"react\";\r\nimport style from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from './avatar.png'\r\nimport {Message} from \"../Message/Message\";\r\n\r\ntype DialogItemPropsType = {\r\n  dialogsItem: Array<{ id: number; name: string }>\r\n  messages: Array<{ id: number; message: string }>\r\n}\r\n\r\nexport const DialogItem = (props: DialogItemPropsType) => {\r\n  let dialogsElements = props.dialogsItem\r\n      .map(d => <Friend id={d.id} name={d.name} key={d.id}/>)\r\n  let messagesElements = props.messages\r\n      .map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n  return (\r\n      <div className={style.dialog}>\r\n        <div  className={style.friendItem}>{dialogsElements}</div>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n  )\r\n}\r\n\r\n// component Friend\r\ntype FriendPropsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nconst Friend = (props: FriendPropsType) => {\r\n  let dialogURL = '/dialogs/' + props.id\r\n  return (\r\n      <div>\r\n        <NavLink className={style.nav} to={dialogURL}>\r\n          <img src={avatar}/>\r\n          <div>{props.name}</div>\r\n        </NavLink>\r\n      </div>\r\n  )\r\n}","import React from \"react\";\r\nimport {addMessageAC} from \"../../redux/reducers/dialogs-reducers\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToProps = {\r\n  messages: Array<{ id: number; message: string }>\r\n  dialogsItem: Array<{ id: number; name: string }>\r\n  newMessageText: string\r\n}\r\ntype mapDispatchToProps = {\r\n  onAddMessage: (newMessageText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxStateType): mapStateToProps => {\r\n\r\n  return {\r\n    messages: state.messagePage.messages,\r\n    dialogsItem: state.messagePage.dialogs,\r\n    newMessageText: state.messagePage.newMessageText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToProps => {\r\n  return {\r\n    onAddMessage: (newMessageText: string) => {\r\n      dispatch(addMessageAC(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {addMessageAC} from \"../../redux/reducers/dialogs-reducers\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\ntype DialogsType = {\r\n  onAddMessage: (newMessageText: string) => void\r\n  messages: Array<any>\r\n  dialogsItem: Array<any>\r\n}\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const formik = useFormik({\r\n        initialValues: {\r\n          newMessageText: ''\r\n        },\r\n\r\n        onSubmit: values => {\r\n          dispatch(addMessageAC(values.newMessageText))\r\n          formik.resetForm()\r\n        },\r\n      }\r\n  )\r\n\r\n  return (\r\n      <div className={styles.dialogsBlock}>\r\n        <div className={styles.dialogs}>\r\n          <DialogItem dialogsItem={props.dialogsItem}\r\n                      messages={props.messages}\r\n          />\r\n        </div>\r\n        <form onSubmit={formik.handleSubmit}\r\n              className={styles.messageForm}>\r\n          <div className={styles.textForm}>\r\n            <TextField className={styles.inputField}\r\n                       label=\"новое сообщение...\"\r\n                       variant=\"outlined\"\r\n                       name=\"newMessageText\"\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.newMessageText}\r\n            />\r\n          </div>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            отправить\r\n          </Button>\r\n        </form>\r\n      </div>\r\n  );\r\n};","import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {loginTC} from \"../../redux/reducers/auth-reducers\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./LoginFormik.module.css\";\r\n\r\ntype FormikErrorType = {\r\n  email?: string\r\n  password?: string\r\n  rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n  const isAuth = useSelector<RootReduxStateType, boolean>(state => state.auth.isAuth)\r\n\r\n  const formik = useFormik({\r\n        initialValues: {\r\n          email: '',\r\n          password: '',\r\n          rememberMe: false,\r\n        },\r\n\r\n        validate: (values) => {\r\n          const errors: FormikErrorType = {};\r\n          if (!formik.values.email) {\r\n            errors.email = 'Required';\r\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.email)) {\r\n            errors.email = 'Invalid email address';\r\n          }\r\n          return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n          dispatch(loginTC(values.email, values.password, false, false))\r\n          formik.resetForm()\r\n        },\r\n      }\r\n  );\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n      <form onSubmit={formik.handleSubmit} className={styles.formBlock}>\r\n\r\n        <div className={styles.itemForm}>\r\n          <label className={styles.title} htmlFor=\"email\">\r\n            Email: </label>\r\n          <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.itemForm}>\r\n          <label className={styles.title} htmlFor=\"password\">\r\n            Password: </label>\r\n          <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.checkbox}>\r\n          <input\r\n              type=\"checkbox\"\r\n              name=\"rememberMe\"\r\n              checked={formik.values.rememberMe}\r\n              onChange={formik.handleChange}\r\n          />\r\n          <label className={styles.title} htmlFor=\"checkbox\">\r\n            запомнить меня</label>\r\n        </div>\r\n\r\n        <button type=\"submit\">войти</button>\r\n      </form>\r\n  );\r\n};\r\n","import React, {Component, ComponentType, Suspense} from 'react';\nimport './App.css';\nimport {Route, withRouter} from 'react-router-dom';\nimport {NavbarContainer} from \"./components/Navbar/NavbarContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializedAppTC} from \"./redux/reducers/app-reducers\";\nimport {RootReduxStateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preolader\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {Login} from \"./components/Login/LoginFormik\";\nimport {AppPropsType} from \"./utils/types/types\";\n\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\n\n\nclass App extends Component<AppPropsType> {\n\n  componentDidMount() {\n    this.props.initializedAppTC();\n  }\n\n  render() {\n\n    return (\n        <div className=\"App\">\n          <HeaderContainer/>\n          {!this.props.initialized && <Preloader/>}\n          <div className=\"App-wrapper\">\n            <NavbarContainer/>\n            <div className='App-wrapper-content'>\n              <Suspense fallback={<div>Загрузка...</div>}>\n                <Route path='/profile/:userId?'\n                       render={() => <ProfileContainer/>}\n                />\n                <Route exact path='/dialogs'\n                       render={() => <DialogsContainer/>}\n                />\n                <Route exact path='/users'\n                       render={() => <UsersContainer/>}\n                />\n                <Route exact path='/login'\n                       render={() => <Login/>}\n                />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootReduxStateType) => ({\n  initialized: state.app.initialized,\n})\nexport default compose<ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializedAppTC})\n)(App)\n","export type initStateSidebarType = {\r\n  friend: friendType[]\r\n}\r\n\r\ntype friendType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\n\r\nlet initState: initStateSidebarType = {\r\n  friend: [\r\n    {id: 1, name: 'Николай'},\r\n    {id: 2, name: 'Андрей'},\r\n    {id: 3, name: 'Виктор'},\r\n    {id: 4, name: 'Станислав'},\r\n    {id: 5, name: 'Алексей'},\r\n    {id: 6, name: 'Максим'},\r\n  ]\r\n}\r\n\r\nexport const sidebarReducer = (state: initStateSidebarType = initState, action: any) => {\r\n  return state\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {dialogsReducer} from \"./reducers/dialogs-reducers\";\r\nimport {profileReducer} from \"./reducers/profile-reducers\";\r\nimport {sidebarReducer} from \"./reducers/sidebar-reducers\";\r\nimport {usersReducer} from \"./reducers/users-reducers\";\r\nimport {authReducer} from \"./reducers/auth-reducers\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./reducers/app-reducers\";\r\n\r\nexport const reducer = combineReducers(\r\n    {\r\n      profilePage: profileReducer,\r\n      messagePage: dialogsReducer,\r\n      sidebar: sidebarReducer,\r\n      usersPage: usersReducer,\r\n      auth: authReducer,\r\n      app: appReducer,\r\n    }\r\n)\r\n\r\nexport type RootReduxStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>, document.getElementById('root')\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2kShT\",\"navbarElements\":\"Navbar_navbarElements__1QKN0\",\"items\":\"Navbar_items__2hxzF\",\"friend\":\"Navbar_friend__3KIsM\",\"titleFriends\":\"Navbar_titleFriends__2Ne7I\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"f96f3f30-1614-4efb-864a-596256d296ea\"\r\n  }\r\n})\r\n\r\ntype respGetMeType = {\r\n  resultCode: number\r\n  messages: string[]\r\n  data: {\r\n    id: number | null\r\n    email: string\r\n    login: string\r\n  }\r\n}\r\n\r\nexport const usersAPI = {\r\n  async getUsers(currentPage: number, pageSize: number) {\r\n    return await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n  },\r\n  async isUnfollow(id: number) {\r\n    return await instance.delete(`follow/${id}`)\r\n  },\r\n  async isFollow(id: number) {\r\n    return await instance.post(`follow/${id}`, {})\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  async getMe() {\r\n    return await instance.get<respGetMeType>(`auth/me`)\r\n  },\r\n  async login(email: string, password: string, rememberMe: boolean = false, captcha: any) {\r\n    return await instance.post('auth/login', {email, password, rememberMe, captcha})\r\n  },\r\n  async logout() {\r\n    return await instance.delete('auth/login')\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  async getUserByID(userId: string) {\r\n    return await instance.get(`profile/${userId}`)\r\n  },\r\n  async getStatus(userId: string) {\r\n    return await instance.get(`profile/status/${userId}`)\r\n  },\r\n  async updateStatus(status: string) {\r\n    return await instance.put(`profile/status`, {status})\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptcha() {\r\n    return instance.get(`security/get-captcha-url`)\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"LoginFormik_formBlock__1IOmP\",\"itemForm\":\"LoginFormik_itemForm__1oJGi\",\"title\":\"LoginFormik_title__-E_i1\",\"checkbox\":\"LoginFormik_checkbox__20IXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__19xtY\",\"title\":\"Header_title__3Hutq\",\"search\":\"Header_search___cCaL\",\"searchIcon\":\"Header_searchIcon__DYJvE\",\"loginBlock\":\"Header_loginBlock__1flqr\",\"btn\":\"Header_btn__1c0pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBlock\":\"Dialogs_dialogsBlock__2kjAg\",\"dialogs\":\"Dialogs_dialogs__3NM6i\",\"messageForm\":\"Dialogs_messageForm__3ui2a\",\"inputField\":\"Dialogs_inputField__2w4pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1lXpr\",\"friendItem\":\"DialogItem_friendItem__3qS02\",\"nav\":\"DialogItem_nav__2v-SF\"};","import {LinearProgress} from \"@material-ui/core\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n      <LinearProgress color=\"secondary\"/>\r\n  )\r\n}","import {profileAPI} from \"../../api/api\";\r\nimport {ProfileDataType} from \"../../utils/types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_USER_STATUS = 'SET-USER-STATUS'\r\nconst DELETE_POST = 'DELETE-POST'\r\n\r\ntype ActionType =\r\n    AddPostAT\r\n    | setUsersProfileAT\r\n    | setUserStatusAT\r\n    | deletePostAT\r\n\r\n\r\ntype AddPostAT = {\r\n  type: 'ADD-POST'\r\n  newPostText: string\r\n}\r\ntype setUsersProfileAT = {\r\n  type: 'SET-USER-PROFILE'\r\n  profile: any\r\n}\r\n\r\ntype setUserStatusAT = {\r\n  type: 'SET-USER-STATUS'\r\n  status: string\r\n}\r\ntype deletePostAT = {\r\n  type: 'DELETE-POST'\r\n  postId: any\r\n}\r\n\r\ntype InitialType = {\r\n  posts: Array<any>\r\n  profile: null | ProfileDataType\r\n  status: string\r\n}\r\n\r\nconst initialState: InitialType = {\r\n  posts: [\r\n    {id: 1, title: 'Первый пост для соц сети.', likeCounts: 22},\r\n    {id: 2, title: 'Второй пост, креатив не мое...', likeCounts: 19},\r\n  ],\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialType = initialState,\r\n                               action: ActionType) => {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost: any = {id: 5, title: action.newPostText, likeCounts: 0}\r\n      return {\r\n        ...state,\r\n        posts: [newPost, ...state.posts],\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state, profile: action.profile\r\n      }\r\n    case SET_USER_STATUS:\r\n      return {\r\n        ...state, status: action.status\r\n      }\r\n    case \"DELETE-POST\":\r\n      return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string): AddPostAT => ({\r\n  type: ADD_POST,\r\n  newPostText\r\n})\r\nexport const setUsersProfile = (profile: any): setUsersProfileAT => ({\r\n  type: SET_USER_PROFILE,\r\n  profile\r\n})\r\n\r\nexport const setUserStatusAC = (status: string): setUserStatusAT => ({\r\n  type: SET_USER_STATUS,\r\n  status\r\n})\r\nexport const deletePost = (postId: any): deletePostAT => ({\r\n  type: DELETE_POST,\r\n  postId\r\n})\r\n\r\nexport const getUsersProfile = (userId: string) => async (dispatch: any) => {\r\n  let promise = await profileAPI.getUserByID(userId)\r\n  dispatch(setUsersProfile(promise.data))\r\n}\r\nexport const getUserStatus = (userId: string) => async (dispatch: any) => {\r\n  let promise = await profileAPI.getStatus(userId)\r\n  dispatch(setUserStatusAC(promise.data))\r\n}\r\nexport const userUpdateStatus = (status: string) => async (dispatch: any) => {\r\n  let promise = await profileAPI.updateStatus(status)\r\n  if (promise.data.resultCode === 0)\r\n    dispatch(setUserStatusAC(status))\r\n}\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootReduxStateType): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n  const RedirectComponent = (props: MapStatePropsType) => {\r\n    const {isAuth, ...restProps} = props\r\n    if (!isAuth) {\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return <Component {...restProps as T}/>\r\n  }\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","export const updateObjectInArray = (items: any, itemID: any, objPropName: any, newObjProps: any) => {\r\n  // @ts-ignore\r\n  return items.map(u => {\r\n        if (u[objPropName] === itemID) {\r\n          return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n      }\r\n  )\r\n}","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/helpers/object-helper\";\r\n\r\ntype actionType =\r\n    followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | currentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n    | setIsFollowingType\r\n\r\ntype followType = {\r\n  type: 'FOLLOW'\r\n  userID: number\r\n}\r\n\r\ntype unFollowType = {\r\n  type: 'UNFOLLOW'\r\n  userID: number\r\n}\r\n\r\ntype setUsersType = {\r\n  type: 'SET-USERS'\r\n  users: UserType[]\r\n}\r\n\r\ntype currentPageType = {\r\n  type: 'SET-CURRENT-PAGE'\r\n  currentPage: number\r\n}\r\n\r\ntype setTotalUsersCountType = {\r\n  type: 'SET-TOTAL-USERS-COUNT'\r\n  count: number\r\n}\r\n\r\ntype setIsFetchingType = {\r\n  type: 'TOGGLE-IS-FETCHING'\r\n  isFetching: boolean\r\n}\r\n\r\ntype setIsFollowingType = {\r\n  type: 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n  isFetching: boolean\r\n  userId: number\r\n}\r\n\r\ntype UsersType = {\r\n  users: Array<UserType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n}\r\n\r\nexport type UserType = {\r\n  name: string\r\n  id: number\r\n  photos: {\r\n    small: string | null\r\n    large: string | null\r\n  }\r\n  status: string\r\n  followed: boolean\r\n\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SETUSERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nconst initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: actionType): UsersType => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n      }\r\n\r\n    case SETUSERS:\r\n      return {...state, users: action.users}\r\n\r\n    case SET_CURRENT_PAGE: {\r\n      return {...state, currentPage: action.currentPage}\r\n    }\r\n\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {...state, totalUsersCount: action.count}\r\n    }\r\n\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n            ? [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const follow = (userID: number): followType => ({type: FOLLOW, userID})\r\nexport const unfollow = (userID: number): unFollowType => ({\r\n  type: UNFOLLOW,\r\n  userID\r\n})\r\nexport const setUsers = (users: Array<UserType>): setUsersType => ({\r\n  type: SETUSERS,\r\n  users\r\n})\r\nexport const setCurrentPage = (currentPage: number): currentPageType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n})\r\nexport const setTotalUsersCount = (count: number): setTotalUsersCountType => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count\r\n})\r\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n})\r\n\r\nexport const toggleIsFollowingProgress = (isFetching: boolean,\r\n                                          userId: number): setIsFollowingType => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let promise = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(promise.data.items))\r\n    dispatch(setTotalUsersCount(promise.data.totalCount))\r\n  }\r\n}\r\n\r\nexport const followMode = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFollowingProgress(true, id))\r\n    let promise = await usersAPI.isFollow(id)\r\n    if (promise.data.resultCode === 0) {\r\n      dispatch(follow(id))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, id))\r\n  }\r\n}\r\n\r\nexport const unfollowMode = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFollowingProgress(true, id))\r\n    let promise = await usersAPI.isUnfollow(id)\r\n    if (promise.data.resultCode === 0) {\r\n      dispatch(unfollow(id))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, id))\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__32cnW\"};"],"sourceRoot":""}