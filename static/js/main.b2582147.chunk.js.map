{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/avatar.jpg","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/avatar.jpg","components/Profile/MyPosts/Post/Post.tsx","redux/state.ts","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/avatar.jpg","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/avatar.png","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","logo","Navbar","props","friendElements","friends","map","f","friend","src","avatar","alt","name","navbar","navbarElements","items","activeClassName","activeLink","to","titleFriends","Post","posts","title","likeCounts","ADD_NEW_POST_TEXT","ADD_POST","ADD_MESSAGE","ADD_NEW_MESSAGE_TEXT","store","_state","profilePage","id","newPostText","messagePage","dialogs","messages","message","newMessageText","sidebar","_callSubscriber","getState","this","subscribe","observer","dispatch","action","type","newPost","push","newMessage","MyPosts","postElements","p","myPosts","textForm","value","onChange","event","text","currentTarget","onPostOnChangeAC","buttons","onClick","ProfileInfo","profileInfo","user","inform","Profile","profile","DialogItem","dialogURL","dialog","nav","Message","item","onMessageOnChangeAC","Dialogs","dialogsElements","state","d","messagesElements","m","d_items","App","path","render","exact","rerenderEntireTree","ReactDOM","bind","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,+BAA+B,MAAQ,sBAAsB,OAAS,uBAAuB,aAAe,+B,sBCA/KD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,KAAO,4B,gBCAzGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,gBCApGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,4B,gBCAnGD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,sBAAsB,QAAU,2B,kBCA9FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,kBCAzDD,EAAOC,QAAU,CAAC,OAAS,6B,oCCA3BD,EAAOC,QAAU,CAAC,MAAQ,sB,8FCaXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uDCNDQ,EAAS,WAClB,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,qBAAKF,UAAWC,IAAME,KAAtB,qB,uBCNG,MAA0B,mCCU5BC,EAAS,SAACC,GAEnB,IAAIC,EAAiBD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAI,sBAAKT,UAAWC,IAAMS,OAAtB,UACxC,qBAAKC,IAAKC,EAAQC,IAAI,KACrBJ,EAAEK,WAGP,OACI,sBAAKd,UAAWC,IAAMc,OAAtB,UACI,sBAAKf,UAAWC,IAAMe,eAAtB,UACI,qBAAKhB,UAAWC,IAAMgB,MAAtB,SACI,cAAC,IAAD,CAASC,gBAAiBjB,IAAMkB,WAAYC,GAAG,WAA/C,0DAEJ,qBAAKpB,UAAWC,IAAMgB,MAAtB,SACI,cAAC,IAAD,CAASC,gBAAiBjB,IAAMkB,WAAYC,GAAG,WAA/C,sEAEJ,qBAAKpB,UAAWC,IAAMgB,MAAtB,SACI,cAAC,IAAD,CAASC,gBAAiBjB,IAAMkB,WAAYC,GAAG,QAA/C,0DAEJ,qBAAKpB,UAAWC,IAAMgB,MAAtB,SACI,cAAC,IAAD,CAASC,gBAAiBjB,IAAMkB,WAAYC,GAAG,SAA/C,oDAEJ,qBAAKpB,UAAWC,IAAMgB,MAAtB,SACI,cAAC,IAAD,CAASC,gBAAiBjB,IAAMkB,WAAYC,GAAG,YAA/C,yEAIR,sBAAKpB,UAAWC,IAAMM,QAAtB,UACI,qBAAKP,UAAWC,IAAMoB,aAAtB,sBACCf,S,mDCvCF,MAA0B,mCCS5BgB,EAAO,SAACjB,GACjB,OACI,sBAAKL,UAAWC,IAAMsB,MAAtB,UACI,qBAAKV,IAAI,GAAGF,IAAKC,IAAUP,EAAMmB,MAAM,uBACvC,yCACUnB,EAAMoB,kBC4CtBC,EAAoB,oBACpBC,EAAW,WACXC,EAAc,cACdC,EAAuB,uBA8EdC,EA3EU,CACrBC,OAAQ,CACJC,YAAa,CACTT,MAAO,CACH,CAACU,GAAI,EAAGT,MAAO,oIAAsCC,WAAY,IACjE,CAACQ,GAAI,EAAGT,MAAO,qHAA4BC,WAAY,KAE3DS,YAAa,IAGjBC,YAAa,CACTC,QAAS,CACL,CAACH,GAAI,EAAGnB,KAAM,kCACd,CAACmB,GAAI,EAAGnB,KAAM,mCAGlBuB,SAAU,CACN,CAACJ,GAAI,EAAGK,QAAS,6DAGrBC,eAAgB,IAGpBC,QAAS,CACL9B,OAAQ,CACJ,CAACuB,GAAI,EAAGnB,KAAM,4BACd,CAACmB,GAAI,EAAGnB,KAAM,sBACd,CAACmB,GAAI,EAAGnB,KAAM,sBACd,CAACmB,GAAI,EAAGnB,KAAM,4BACd,CAACmB,GAAI,EAAGnB,KAAM,4BACd,CAACmB,GAAI,EAAGnB,KAAM,+BAK1B2B,gBAnCqB,aAsCrBC,SAtCqB,WAuCjB,OAAOC,KAAKZ,QAGhBa,UA1CqB,SA0CXC,GACNF,KAAKF,gBAAkBI,GAG3BC,SA9CqB,SA8CZC,GACL,GAAIA,EAAOC,OAASrB,EAAU,CAC1B,IAAIsB,EAAqB,CAAChB,GAAI,EAAGT,MAAOmB,KAAKZ,OAAOC,YAAYE,YAAaT,WAAY,GACzFkB,KAAKZ,OAAOC,YAAYT,MAAM2B,KAAKD,GACnCN,KAAKZ,OAAOC,YAAYE,YAAc,GACtCS,KAAKF,gBAAgBE,KAAKZ,aACvB,GAAIgB,EAAOC,OAAStB,EACvBiB,KAAKZ,OAAOC,YAAYE,YAAca,EAAOb,YAC7CS,KAAKF,gBAAgBE,KAAKZ,aACvB,GAAIgB,EAAOC,OAASpB,EAAa,CACpC,IAAIuB,EAA0B,CAAClB,GAAI,EAAGK,QAASK,KAAKZ,OAAOI,YAAYI,gBACvEI,KAAKZ,OAAOI,YAAYE,SAASa,KAAKC,GACtCR,KAAKZ,OAAOI,YAAYI,eAAiB,GACzCI,KAAKF,gBAAgBE,KAAKZ,aACnBgB,EAAOC,OAASnB,IACvBc,KAAKZ,OAAOI,YAAYI,eAAiBQ,EAAOR,eAChDI,KAAKF,gBAAgBE,KAAKZ,WClHzBqB,EAAU,SAAC/C,GAEpB,IAAMgD,EAAehD,EAAMkB,MAAMf,KAAI,SAAA8C,GAAC,OAAI,cAAC,EAAD,CAC3BrB,GAAIqB,EAAErB,GAAIT,MAAO8B,EAAE9B,MAAOC,WAAY6B,EAAE7B,YAA9C6B,EAAErB,OAWX,OACI,sBAAKjC,UAAWC,IAAMsD,QAAtB,UAEI,sBAAKvD,UAAWC,IAAMuD,SAAtB,UACI,0BAAUC,MAAOpD,EAAM6B,YACbwB,SAVC,SAACC,GACpB,IAAIC,EAAOD,EAAME,cAAcJ,MAC/BpD,EAAMyC,SD8GkB,SAACc,GAAD,MAAgC,CAACZ,KAAMtB,EAAmBQ,YAAa0B,GC9GhFE,CAAiBF,OAWxB,sBAAK5D,UAAWC,IAAM8D,QAAtB,UACI,wBAAQC,QAlBR,WACZ3D,EAAMyC,SDiH6B,CAACE,KAAMrB,KChG9B,kBACA,kDAIR,8BACK0B,Q,iBCzCF,MAA0B,mCCI5BY,EAAc,WACvB,OACI,qBAAKjE,UAAWC,IAAMiE,YAAtB,SACI,sBAAKlE,UAAWC,IAAMkE,KAAtB,UACI,qBAAKxD,IAAKC,IACV,sBAAKZ,UAAWC,IAAMmE,OAAtB,UACI,qBAAKpE,UAAWC,IAAMa,KAAtB,uFADJ,oEAEmB,uBAFnB,iICEHuD,EAAU,SAAChE,GACpB,OACI,sBAAKL,UAAWC,IAAMqE,QAAtB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAS/C,MAAOlB,EAAM2B,YAAYT,MACzBW,YAAa7B,EAAM2B,YAAYE,YAC/BY,SAAUzC,EAAMyC,e,kCCjBtB,MAA0B,mCCQ5ByB,EAAa,SAAClE,GAEvB,IAAImE,EAAY,YAAcnE,EAAM4B,GAEpC,OACI,qBAAKjC,UAAWC,IAAMwE,OAAtB,SACI,eAAC,IAAD,CAASvD,gBAAiBjB,IAAMyE,IAAKtD,GAAIoD,EAAzC,UACI,qBAAK7D,IAAKC,IACTP,EAAMS,W,iBCLV6D,EAAU,SAACtE,GAWpB,OACI,sBAAKL,UAAWC,IAAMoC,SAAtB,UACI,sBAAKrC,UAAWC,IAAM2E,KAAtB,UACI,0BAAUnB,MAAOpD,EAAMkC,eAAgBmB,SARzB,SAACC,GACvB,IAAIC,EAAOD,EAAME,cAAcJ,MAC/BpD,EAAMyC,SPsHqB,SAACc,GAAD,MAAoC,CAACZ,KAAMnB,EAAsBU,eAAgBqB,GOtH5FiB,CAAoBjB,OAO5B,8BACI,wBAAQI,QAdL,WACf3D,EAAMyC,SPyHmC,CAACE,KAAMpB,KO5GpC,uBAGR,qBAAK5B,UAAWC,IAAMqC,QAAtB,SACKjC,EAAMiC,cCpBVwC,EAAU,SAACzE,GAEpB,IAAI0E,EAAkB1E,EAAM2E,MAAM5C,QAC7B5B,KAAI,SAAAyE,GAAC,OAAI,cAAC,EAAD,CAAYhD,GAAIgD,EAAEhD,GAAInB,KAAMmE,EAAEnE,UAExCoE,EAAmB7E,EAAM2E,MAAM3C,SAC9B7B,KAAI,SAAA2E,GAAC,OAAI,cAAC,EAAD,CAAS7C,QAAS6C,EAAE7C,QACXQ,SAAUzC,EAAMyC,SAChBP,eAAgBlC,EAAM2E,MAAMzC,oBAGnD,OACI,sBAAKvC,UAAWC,IAAMmC,QAAtB,UAEI,qBAAKpC,UAAWC,IAAMmF,QAAtB,SACKL,IAGL,qBAAK/E,UAAWC,IAAMoC,SAAtB,SACK6C,Q,OCSFG,MAzBf,SAAahF,GACT,OACI,sBAAKL,UAAU,cAAf,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQO,QAASF,EAAM2E,MAAMxC,QAAQ9B,SAErC,sBAAKV,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOsF,KAAK,WACLC,OAAQ,kBAAM,cAAC,EAAD,CACVvD,YAAa3B,EAAM2E,MAAMhD,YACzBc,SAAUzC,EAAMyC,cAG3B,cAAC,IAAD,CAAO0C,OAAK,EAACF,KAAK,WACXC,OAAQ,kBAAM,cAAC,EAAD,CACVP,MAAO3E,EAAM2E,MAAM7C,YACnBW,SAAUzC,EAAMyC,qBCvBrC2C,EAAqB,SAACT,GAExBU,IAASH,OACL,cAAC,IAAD,UACI,cAAC,EAAD,CAAKP,MAAOA,EACPlC,SAAUhB,EAAMgB,SAAS6C,KAAK7D,OAErB8D,SAASC,eAAe,UAGlDJ,EAAmB3D,EAAMY,YACzBZ,EAAMc,UAAU6C,GAEhBnG,M","file":"static/js/main.b2582147.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2kShT\",\"navbarElements\":\"Navbar_navbarElements__1QKN0\",\"items\":\"Navbar_items__2hxzF\",\"friend\":\"Navbar_friend__3KIsM\",\"titleFriends\":\"Navbar_titleFriends__2Ne7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"ProfileInfo_user__Uv8qA\",\"description\":\"ProfileInfo_description__PEbEq\",\"name\":\"ProfileInfo_name__3Ghws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1bdgn\",\"textForm\":\"MyPosts_textForm__uSFXe\",\"buttons\":\"MyPosts_buttons__BHSzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3NM6i\",\"d_items\":\"Dialogs_d_items__1jRsm\",\"messages\":\"Dialogs_messages__HMi2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__32cnW\",\"item\":\"Message_item__3AXVx\",\"message\":\"Message_message__10bWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__19xtY\",\"logo\":\"Header_logo__1kbZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1lXpr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__2znaa\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.logo}>FRND</div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.9bdeb6d6.jpg\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Navbar.module.css'\r\nimport {FriendType} from \"../../redux/state\";\r\nimport avatar from './avatar.jpg'\r\n\r\ntype NavbarPropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nexport const Navbar = (props: NavbarPropsType) => {\r\n\r\n    let friendElements = props.friends.map(f => <div className={style.friend}>\r\n        <img src={avatar} alt=''/>\r\n        {f.name}\r\n    </div>)\r\n\r\n    return (\r\n        <div className={style.navbar}>\r\n            <div className={style.navbarElements}>\r\n                <div className={style.items}>\r\n                    <NavLink activeClassName={style.activeLink} to='/profile'>Профиль</NavLink>\r\n                </div>\r\n                <div className={style.items}>\r\n                    <NavLink activeClassName={style.activeLink} to='/dialogs'>Сообщения</NavLink>\r\n                </div>\r\n                <div className={style.items}>\r\n                    <NavLink activeClassName={style.activeLink} to='/news'>Новости</NavLink>\r\n                </div>\r\n                <div className={style.items}>\r\n                    <NavLink activeClassName={style.activeLink} to='/music'>Музыка</NavLink>\r\n                </div>\r\n                <div className={style.items}>\r\n                    <NavLink activeClassName={style.activeLink} to='/settings'>Настройки</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.friends}>\r\n                <div className={style.titleFriends}>friends:</div>\r\n                {friendElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.fd7aeb24.jpg\";","import React from \"react\";\r\nimport style from './Post.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\ntype PostPropsType = {\r\n    id: number\r\n    title: string\r\n    likeCounts: number\r\n}\r\nexport const Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={style.posts}>\r\n            <img alt='' src={avatar}/>{props.title}<br/>\r\n            <span>\r\n                like {props.likeCounts}\r\n            </span>\r\n        </div>\r\n    )\r\n}","export type SidebarType = {\r\n    friend: Array<FriendType>\r\n}\r\nexport type FriendType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type PostsType = {\r\n    id: number\r\n    title: string\r\n    likeCounts: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type MessagePageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    messagePage: MessagePageType\r\n    sidebar: SidebarType\r\n}\r\ntype AddPostAT = {\r\n    type :'ADD-POST'\r\n}\r\ntype AddNewPostAT = {\r\n    type :'ADD-NEW-POST-TEXT'\r\n    newPostText: string\r\n}\r\ntype AddMessageAT = {\r\n    type :'ADD-MESSAGE'\r\n}\r\ntype AddNewMessageAT = {\r\n    type :'ADD-NEW-MESSAGE-TEXT'\r\n    newMessageText: string\r\n}\r\nexport type ActionType =  AddPostAT | AddMessageAT | AddNewPostAT | AddNewMessageAT\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _callSubscriber: (state: StateType) => void\r\n    getState: () => StateType\r\n    subscribe: (observer: any) => void\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\n\r\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT';\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst ADD_NEW_MESSAGE_TEXT = 'ADD-NEW-MESSAGE-TEXT';\r\n\r\n\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, title: 'Уволился с работы, учу JS и REACT!', likeCounts: 22},\r\n                {id: 2, title: 'Учу реакт 1 месяц, летим', likeCounts: 19},\r\n            ],\r\n            newPostText: ''\r\n        },\r\n\r\n        messagePage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Кларк'},\r\n                {id: 2, name: 'Питер'},\r\n            ],\r\n\r\n            messages: [\r\n                {id: 1, message: 'Хей, привет'},\r\n            ],\r\n\r\n            newMessageText: ''\r\n        },\r\n\r\n        sidebar: {\r\n            friend: [\r\n                {id: 1, name: 'Брюс'},\r\n                {id: 2, name: 'Тор'},\r\n                {id: 3, name: 'Мэт'},\r\n                {id: 4, name: 'Бари'},\r\n                {id: 5, name: 'Тони'},\r\n                {id: 6, name: 'Стив'},\r\n            ]\r\n        }\r\n    },\r\n\r\n    _callSubscriber() {\r\n    },\r\n\r\n    getState() {\r\n        return this._state\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === ADD_POST) {\r\n            let newPost: PostsType = {id: 5, title: this._state.profilePage.newPostText, likeCounts: 0}\r\n            this._state.profilePage.posts.push(newPost)\r\n            this._state.profilePage.newPostText = ''\r\n            this._callSubscriber(this._state)\r\n        } else if (action.type === ADD_NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.newPostText\r\n            this._callSubscriber(this._state)\r\n        } else if (action.type === ADD_MESSAGE) {\r\n            let newMessage: MessageType = {id: 3, message: this._state.messagePage.newMessageText}\r\n            this._state.messagePage.messages.push(newMessage)\r\n            this._state.messagePage.newMessageText = ''\r\n            this._callSubscriber(this._state)\r\n        } else if (action.type === ADD_NEW_MESSAGE_TEXT) {\r\n            this._state.messagePage.newMessageText = action.newMessageText\r\n            this._callSubscriber(this._state)\r\n        }\r\n    },\r\n}\r\n\r\nexport const addPostAC = (): AddPostAT => ({type: ADD_POST})\r\n\r\nexport const onPostOnChangeAC = (text: string): AddNewPostAT =>({type: ADD_NEW_POST_TEXT, newPostText: text})\r\n\r\nexport const addMessageAC = (): AddMessageAT => ({type: ADD_MESSAGE})\r\n\r\nexport const onMessageOnChangeAC = (text: string): AddNewMessageAT => ({type: ADD_NEW_MESSAGE_TEXT, newMessageText: text})\r\n\r\nexport default store;","import React, {ChangeEvent} from \"react\";\r\nimport style from './MyPosts.module.css'\r\nimport {Post} from './Post/Post'\r\nimport {addPostAC, onPostOnChangeAC, PostsType} from \"../../../redux/state\";\r\nimport {type} from \"os\";\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n    dispatch: (action: any) => void\r\n}\r\n\r\nexport const MyPosts = (props: MyPostsType) => {\r\n\r\n    const postElements = props.posts.map(p => <Post\r\n        key={p.id} id={p.id} title={p.title} likeCounts={p.likeCounts}/>)\r\n\r\n    const addPost = () => {\r\n        props.dispatch(addPostAC())\r\n    }\r\n\r\n    const onPostOnChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.dispatch(onPostOnChangeAC(text) )\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n\r\n            <div className={style.textForm}>\r\n                <textarea value={props.newPostText}\r\n                          onChange={onPostOnChange}\r\n                />\r\n\r\n                <div className={style.buttons}>\r\n                    <button onClick={addPost}>SEND</button>\r\n                    <button>DELETE</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.35b2083a.jpg\";","import React from \"react\";\r\nimport style from './ProfileInfo.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.user}>\r\n                <img src={avatar}/>\r\n                <div className={style.inform}>\r\n                    <div className={style.name}>КАМРАН БАБАЕВ</div>\r\n                    возраст: 27 лет<br/>город: Санкт-Петербург\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Profile.module.css'\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionType, ProfilePageType} from \"../../redux/state\";\r\n\r\ntype ProfileType = {\r\n    profilePage: ProfilePageType\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport const Profile = (props: ProfileType) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     newPostText={props.profilePage.newPostText}\r\n                     dispatch={props.dispatch}/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.8f6f0a61.png\";","import React from \"react\";\r\nimport style from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../../../redux/state\";\r\nimport avatar from './avatar.png'\r\n\r\ntype DialogItemType = DialogType\r\n\r\nexport const DialogItem = (props: DialogItemType) => {\r\n\r\n    let dialogURL = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink activeClassName={style.nav} to={dialogURL}>\r\n                <img src={avatar}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./Message.module.css\";\r\nimport {ActionType, addMessageAC, onMessageOnChangeAC} from \"../../../redux/state\";\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    dispatch: (action: ActionType) => void\r\n    newMessageText: string\r\n}\r\n\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n\r\n    const addMessage = () => {\r\n        props.dispatch(addMessageAC() )\r\n    }\r\n\r\n    const onMessageOnChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.dispatch( onMessageOnChangeAC(text) )\r\n    }\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            <div className={style.item}>\r\n                <textarea value={props.newMessageText} onChange={onMessageOnChange}/>\r\n                <div>\r\n                    <button onClick={addMessage}>SEND</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {MessagePageType} from \"../../redux/state\";\r\n\r\ntype DialogsType = {\r\n    state: MessagePageType\r\n    dispatch: (action: any) => void\r\n}\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n\r\n    let dialogsElements = props.state.dialogs\r\n        .map(d => <DialogItem id={d.id} name={d.name}/>)\r\n\r\n    let messagesElements = props.state.messages\r\n        .map(m => <Message message={m.message}\r\n                           dispatch={props.dispatch}\r\n                           newMessageText={props.state.newMessageText}\r\n        />)\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.d_items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {Route} from 'react-router-dom';\nimport {StateType} from './redux/state';\n\ntype AppPropsType = {\n    state: StateType\n    dispatch: (action: any) => void\n}\n\nfunction App(props: AppPropsType) {\n    return (\n        <div className=\"App-wrapper\">\n\n            <Header/>\n            <Navbar friends={props.state.sidebar.friend}/>\n\n            <div className='App-wrapper-content'>\n                <Route path='/profile'\n                       render={() => <Profile\n                           profilePage={props.state.profilePage}\n                           dispatch={props.dispatch}\n                       />}/>\n\n                <Route exact path='/dialogs'\n                       render={() => <Dialogs\n                           state={props.state.messagePage}\n                           dispatch={props.dispatch}\n                       />}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store, {StateType} from \"./redux/state\";\n\nconst rerenderEntireTree = (state: StateType) => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state}\n                 dispatch={store.dispatch.bind(store)}\n            />\n        </BrowserRouter>, document.getElementById('root'))\n}\n\nrerenderEntireTree(store.getState())\nstore.subscribe(rerenderEntireTree)\n\nreportWebVitals();\n"],"sourceRoot":""}