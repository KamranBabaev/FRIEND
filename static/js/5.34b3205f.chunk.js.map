{"version":3,"sources":["components/Login/Login.tsx"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","className","styles","formBlock","onSubmit","inputs","placeholder","name","component","Input","validate","required","type","checkBox","formSummaryError","connect","state","isAuth","auth","loginTC","to","formData","login","password","rememberMe"],"mappings":"kGAAA,oGA4EMA,EAAiBC,YACnB,CAACC,KAAM,SADYD,EArCL,SAAC,GAAgC,IAA/BE,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,MAChC,OACI,uBAAMC,UAAWC,IAAOC,UAAWC,SAAUL,EAA7C,UACE,2DACA,qBAAKE,UAAWC,IAAOG,OAAvB,SACE,cAAC,IAAD,CAAOC,YAAa,oCACbC,KAAM,QACNC,UAAWC,IACXC,SAAU,CAACC,SAGpB,qBAAKV,UAAWC,IAAOG,OAAvB,SACE,cAAC,IAAD,CAAOO,KAAM,WAAYL,KAAM,WACxBD,YAAa,0CACbE,UAAWC,IACXC,SAAU,CAACC,SAGpB,sBAAKV,UAAWC,IAAOW,SAAvB,UACE,cAAC,IAAD,CAAOD,KAAM,WACNL,KAAM,aACNC,UAAWC,MAElB,sHAGAT,GAAS,qBAAKC,UAAWC,IAAOY,iBAAvB,SACNd,IAGL,8BACE,4EAcKe,uBAJS,SAACC,GAAD,MAAqD,CAC3EC,OAAQD,EAAME,KAAKD,UAIjB,CAACE,aADUJ,EA5DD,SAAC,GAAuC,IAAtCI,EAAqC,EAArCA,QAMd,OANmD,EAA5BF,OAOd,cAAC,IAAD,CAAUG,GAAG,aAEb,8BACL,cAACxB,EAAD,CAAgBQ,SARH,SAACiB,GAChBF,EAAQE,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/5.34b3205f.chunk.js","sourcesContent":["import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/reducers/auth-reducers\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport styles from '../common/FormsControl/FormsControl.module.css'\r\n\r\ntype FormDataType = {\r\n  login: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\ntype mapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n  loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\ntype LoginPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nconst Login = ({loginTC, isAuth}: LoginPropsType) => {\r\n\r\n  const onSubmit = (formData: FormDataType) => {\r\n    loginTC(formData.login, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to='/profile'/>\r\n  } else {\r\n    return <div>\r\n      <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  }\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}: any) => {\r\n  return (\r\n      <form className={styles.formBlock} onSubmit={handleSubmit}>\r\n        <h1>Вход:</h1>\r\n        <div className={styles.inputs}>\r\n          <Field placeholder={'логин...'}\r\n                 name={'login'}\r\n                 component={Input}\r\n                 validate={[required]}\r\n          />\r\n        </div>\r\n        <div className={styles.inputs}>\r\n          <Field type={'password'} name={'password'}\r\n                 placeholder={'пароль...'}\r\n                 component={Input}\r\n                 validate={[required]}\r\n          />\r\n        </div>\r\n        <div className={styles.checkBox}>\r\n          <Field type={'checkbox'}\r\n                 name={'rememberMe'}\r\n                 component={Input}\r\n          />\r\n          <span>запомнить меня</span>\r\n        </div>\r\n        {\r\n          error && <div className={styles.formSummaryError}>\r\n            {error}\r\n          </div>\r\n        }\r\n        <div>\r\n          <button>войти</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>(\r\n    {form: 'login'}\r\n)(LoginForm)\r\n\r\nconst mapStateToProps = (state: RootReduxStateType): mapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {loginTC})(Login)\r\n"],"sourceRoot":""}